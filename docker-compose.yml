services:
  one-day-poc-client:
    build: ./one-day-poc-client
    ports:
      - "5173:5173"
    depends_on:
      - one-day-poc-server

  one-day-poc-server:
    privileged: true
    build: ./one-day-poc-server
    env_file: ./one-day-poc-server/docker.env  
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - python-embeddings
    volumes:
      - ~/.aws:/root/.aws

  python-embeddings:
    build: ./one-day-poc-server/embeddings/src/main/python
    ports:
      - "7000:7000"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/html:/usr/share/nginx/html
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: always
    networks:
      - default
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"
