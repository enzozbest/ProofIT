{
  "message": "Here's a financial dashboard implementation with a modern dark gradient UI that shows account balance, monthly income, and expense history. The design uses a blue-to-purple gradient background with glass-morphism effects for the cards and charts.",
  "keywords": ["dashboard", "finance", "charts", "financial tracking", "expenses"],
  "files": {
    "package.json": {
      "name": "dashboard-app",
      "version": "1.0.0",
      "description": "Financial dashboard",
      "main": "index.js",
      "scripts": {
        "start": "vite"
      },
      "dependencies": {
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "vite": "^4.0.0"
      }
    },
    "index.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Financial Dashboard</title>\n  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css\" rel=\"stylesheet\">\n  <style>\n    body, html {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n    }\n    body {\n      background: linear-gradient(135deg, #0f1e44 0%, #1e1a45 50%, #4a1a6c 100%);\n      color: white;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n      padding: 20px;\n    }\n    .stat-card {\n      background-color: rgba(30, 41, 75, 0.5);\n      border-radius: 12px;\n      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n      backdrop-filter: blur(8px);\n      border: 1px solid rgba(255, 255, 255, 0.1);\n    }\n    .bar-chart-container {\n      height: 300px;\n    }\n    .chart-bar {\n      background-color: rgba(79, 129, 255, 0.7);\n      border-radius: 4px 4px 0 0;\n      transition: height 0.3s ease;\n    }\n    .chart-bar:hover {\n      background-color: rgba(100, 149, 255, 0.9);\n    }\n    .icon-bg {\n      background-color: rgba(79, 129, 255, 0.2);\n    }\n    .positive-change {\n      color: #4ade80;\n    }\n    .negative-change {\n      color: #f87171;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"module\" src=\"/src/main.jsx\"></script>\n</body>\n</html>",
    "src/main.jsx": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));",
    "src/App.jsx": "import React from 'react';\nimport DashboardHeader from './components/DashboardHeader';\nimport StatCards from './components/StatCards';\nimport ExpensesChart from './components/ExpensesChart';\n\nconst App = () => {\n  // Mock data for the dashboard\n  const dashboardData = {\n    date: \"Wednesday, March 26, 2025\",\n    totalBalance: 24500.00,\n    totalBalanceChange: 12,\n    monthlyIncome: 8200.00,\n    monthlyIncomeChange: 3.5,\n    monthlyExpenses: [\n      { month: \"Jan\", amount: 4000 },\n      { month: \"Feb\", amount: 3000 },\n      { month: \"Mar\", amount: 2000 },\n      { month: \"Apr\", amount: 2700 },\n      { month: \"May\", amount: 1900 },\n      { month: \"Jun\", amount: 2400 },\n      { month: \"Jul\", amount: 3800 }\n    ]\n  };\n\n  return (\n    <div className=\"max-w-5xl mx-auto\">\n      <DashboardHeader date={dashboardData.date} />\n      \n      <StatCards \n        totalBalance={dashboardData.totalBalance}\n        totalBalanceChange={dashboardData.totalBalanceChange}\n        monthlyIncome={dashboardData.monthlyIncome}\n        monthlyIncomeChange={dashboardData.monthlyIncomeChange}\n      />\n      \n      <ExpensesChart expenses={dashboardData.monthlyExpenses} />\n    </div>\n  );\n};\n\nexport default App;",
    "src/components/DashboardHeader.jsx": "import React from 'react';\n\nconst DashboardHeader = ({ date }) => {\n  return (\n    <div className=\"mb-8\">\n      <h1 className=\"text-4xl font-bold text-white mb-2\">Financial Dashboard</h1>\n      <div className=\"flex items-center text-gray-300\">\n        <svg width=\"20\" height=\"20\" fill=\"currentColor\" className=\"mr-2\">\n          <path d=\"M5 4h13a2 2 0 012 2v12a2 2 0 01-2 2H5a2 2 0 01-2-2V6c0-1.1.9-2 2-2zm0 2v12h13V6H5zm2 2h9v2H7V8zm0 4h9v2H7v-2zm0 4h5v2H7v-2z\"></path>\n        </svg>\n        <span>{date}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardHeader;",
    "src/components/StatCards.jsx": "import React from 'react';\n\nconst StatCard = ({ title, value, change, icon }) => {\n  const isPositive = change > 0;\n  \n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(value);\n  };\n\n  return (\n    <div className=\"stat-card p-6 relative\">\n      <div className=\"text-gray-300 mb-1\">{title}</div>\n      <div className=\"text-4xl font-bold mb-2 text-white\">{formatCurrency(value)}</div>\n      <div className={`flex items-center ${isPositive ? 'positive-change' : 'negative-change'}`}>\n        <svg \n          width=\"16\" \n          height=\"16\" \n          viewBox=\"0 0 24 24\" \n          fill=\"none\" \n          stroke=\"currentColor\" \n          strokeWidth=\"2\" \n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\" \n          className=\"mr-1\"\n        >\n          {isPositive ? (\n            <path d=\"M12 19V5M5 12l7-7 7 7\" />\n          ) : (\n            <path d=\"M12 5v14M5 12l7 7 7-7\" />\n          )}\n        </svg>\n        <span>{`${isPositive ? '+' : '-'}${Math.abs(change)}%`} vs last month</span>\n      </div>\n      <div className=\"absolute right-6 top-6 icon-bg p-3 rounded-full\">\n        {icon}\n      </div>\n    </div>\n  );\n};\n\nconst StatCards = ({ totalBalance, totalBalanceChange, monthlyIncome, monthlyIncomeChange }) => {\n  const walletIcon = (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"text-blue-300\">\n      <path d=\"M20 12v-1.5c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2v9c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V18h2v-6h-2zm-2 7H6V9.5h12V19zm2-11H4V6c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v2h2c1.1 0 2 .9 2 2v2h-2V8zm-5 4c.8 0 1.5.7 1.5 1.5S15.8 15 15 15s-1.5-.7-1.5-1.5.7-1.5 1.5-1.5z\"/>\n    </svg>\n  );\n\n  const chartIcon = (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-blue-300\">\n      <path d=\"M3.5 18.5l6-6 4 4L22 7.5\" />\n      <path d=\"M16 7h6v6\" />\n    </svg>\n  );\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n      <StatCard \n        title=\"Total Balance\" \n        value={totalBalance} \n        change={totalBalanceChange} \n        icon={walletIcon} \n      />\n      <StatCard \n        title=\"Monthly Income\" \n        value={monthlyIncome} \n        change={monthlyIncomeChange} \n        icon={chartIcon} \n      />\n    </div>\n  );\n};\n\nexport default StatCards;",
    "src/components/ExpensesChart.jsx": "import React from 'react';\n\nconst ExpensesChart = ({ expenses }) => {\n  // Find the maximum value to normalize the chart\n  const maxExpense = Math.max(...expenses.map(expense => expense.amount));\n  \n  // Create y-axis labels\n  const yAxisLabels = [\n    { value: 0, label: '$0' },\n    { value: 1000, label: '$1000' },\n    { value: 2000, label: '$2000' },\n    { value: 3000, label: '$3000' },\n    { value: 4000, label: '$4000' }\n  ];\n\n  // Calculate the height of each bar as a percentage\n  const calculateHeight = (amount) => {\n    return (amount / maxExpense) * 100;\n  };\n\n  return (\n    <div className=\"stat-card p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-white\">Monthly Expenses</h2>\n        <span className=\"text-gray-300\">Last 7 months</span>\n      </div>\n      \n      <div className=\"flex\">\n        {/* Y-axis labels */}\n        <div className=\"flex flex-col justify-between pr-2 text-right text-gray-300 text-sm h-48\">\n          {yAxisLabels.map((label, index) => (\n            <div key={index}>{label.label}</div>\n          ))}\n        </div>\n        \n        {/* Chart bars */}\n        <div className=\"flex-1\">\n          <div className=\"flex justify-between h-48\">\n            {expenses.map((expense, index) => (\n              <div key={index} className=\"flex flex-col justify-end items-center w-full\">\n                <div \n                  className=\"chart-bar w-12\" \n                  style={{ height: `${calculateHeight(expense.amount)}%` }}\n                ></div>\n                <div className=\"mt-2 text-gray-300 text-sm\">{expense.month}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesChart;"
  }
}